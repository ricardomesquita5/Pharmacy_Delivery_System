@startuml
autonumber
'hide footbox
actor "Administrator" as ADM

participant ":AddDroneUI" as UI
participant ":AddDroneController" as CTRL
participant ":PharmacyDB" as PHARDB
participant ":Drone" as DRONE
participant "phar\n:Pharmacy" as PHAR
participant "drone\n:Drone" as ODRONE
participant ":DroneDB" as DRONEDB
participant "pharmaciesList\n:List<Pharmacy>" as LPHAR

activate ADM
ADM -> UI : Starts the process add Drone.
activate UI

UI -> CTRL : pharmaciesList = getPharmaciesList()
activate CTRL

CTRL -> PHARDB: pharmaciesList = geAllPharmacies()
activate PHARDB
deactivate PHARDB

deactivate CTRL

UI --> ADM : Shows to the Administrator a list of pharmacies and asks him to choose the one he wants add a drone.
deactivate UI

ADM -> UI : Selects the Pharmacy he wants add a drone.
activate UI

UI -> CTRL : getPharmacyByEmail(PharmacyEmail)
activate CTRL

CTRL -> PHARDB: phar = getPharmacy(PharmacyEmail)
activate PHARDB
deactivate PHARDB

deactivate CTRL

UI --> ADM : Asks for the necessary drone's data (i.e. capacity (KG), power (W), max battery (W/H)).
deactivate UI

ADM -> UI : Enters the requested data.
activate UI

UI -> CTRL : newDrone(capacity,power,maxBattery)
activate CTRL

CTRL -> DRONE: drone = new Drone(capacity,power,maxBattery)
activate DRONE
deactivate DRONE

UI --> ADM:  Displays the data, asking him to confirm it.
deactivate CTRL
deactivate UI

ADM -> UI : Confirms
activate UI
UI -> CTRL : addDrone()
activate CTRL

CTRL -> PHAR : pharEmail = getEmail()
activate PHAR
deactivate PHAR

CTRL -> ODRONE : save(pharEmail)
activate ODRONE

ODRONE -> DRONEDB : addDrone(drone,pharEmail)
activate DRONEDB
deactivate DRONEDB
deactivate ODRONE

UI --> ADM : Informs about the success of the operation
deactivate CTRL
deactivate UI

deactivate ADM

@enduml
